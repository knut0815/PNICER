from __future__ import absolute_import, division, print_function

__author__ = 'Stefan Meingast'


# ----------------------------------------------------------------------
# Import stuff
import brewer2mpl
import numpy as np
import matplotlib.pyplot as plt

from pnicer import Magnitudes, mp_kde
from astropy.io import fits
from matplotlib.pyplot import GridSpec
from matplotlib.ticker import MultipleLocator


# ----------------------------------------------------------------------
# Define file paths
science_path = "/Users/Antares/Dropbox/Data/Orion/VISION/Catalog/VISION_+_Spitzer_s.fits"
control_path = "/Users/Antares/Dropbox/Data/Orion/VISION/Catalog/VISION_CF+_Spitzer_s.fits"
results_path = "/Users/Antares/Dropbox/Projects/PNICER/Paper/Results/"

# Load colormap
cmap = brewer2mpl.get_map('Blues', 'Sequential', number=9, reverse=False).get_mpl_colormap(N=100, gamma=0.5)


# ----------------------------------------------------------------------
# Load data
control_dummy = fits.open(control_path)[1].data
control_glon = control_dummy["GLON"]
control_glat = control_dummy["GLAT"]

idx = [66114, 95568]
science_dummy = fits.open(science_path)[1].data
science_glon = science_dummy["GLON"][idx]
science_glat = science_dummy["GLAT"][idx]


# ----------------------------------------------------------------------
# Define features to be used
features_names = ["J", "H", "Ks", "IRAC1"]
errors_names = ["J_err", "H_err", "Ks_err", "IRAC1_err"]
features_extinction = [2.5, 1.55, 1.0, 0.636]


# ----------------------------------------------------------------------
# Load data into lists for PNICER
control_data = [control_dummy[n] for n in features_names]
control_error = [control_dummy[n] for n in errors_names]

science_data = [science_dummy[n][idx] for n in features_names]
science_error = [science_dummy[n][idx] for n in errors_names]
science_data_all = [science_dummy[n] for n in features_names]
science_error_all = [science_dummy[n] for n in features_names]


# ----------------------------------------------------------------------
# Initialize data
control = Magnitudes(mag=control_data, err=control_error, extvec=features_extinction,
                     lon=control_glon, lat=control_glat, names=features_names)
control_colors = control.mag2color()
control_colors_rot = control_colors.rotate()

science = Magnitudes(mag=science_data, err=science_error, extvec=features_extinction,
                     lon=science_glon, lat=science_glat, names=features_names)
science_colors = science.mag2color()
science_all_colors = Magnitudes(mag=science_data_all, err=science_error_all, extvec=features_extinction).mag2color()


# ----------------------------------------------------------------------
# Run PNICER
science_ext = science_colors.pnicer(control=control_colors, sampling=4, kernel="epanechnikov")


# ----------------------------------------------------------------------
# Get densities for control field data
idx_combinations = [(1, 2), (1, 0), (2, 0)]

# Create grid
grid_bw = 0.04
l, h = -0.6, 2.4 + grid_bw / 2
x, y = np.meshgrid(np.arange(start=l, stop=h, step=grid_bw), np.arange(start=l, stop=h, step=grid_bw))
xgrid = np.vstack([x.ravel(), y.ravel()]).T
edges = (np.min(x), np.max(x), np.min(y), np.max(y))

dens_control_norm = []
for i2, i1 in idx_combinations:
    fil = (np.isfinite(control_colors.features[i1])) & (np.isfinite(control_colors.features[i2]))
    xdata = control_colors.features[i1][fil]
    ydata = control_colors.features[i2][fil]
    data = np.vstack([xdata, ydata]).T
    dens_control_norm.append(mp_kde(grid=xgrid, data=data, bandwidth=grid_bw * 2, shape=x.shape, kernel="epanechnikov"))


# ----------------------------------------------------------------------
# Create figure
fig = plt.figure(figsize=[20, 10])
gs_cf = GridSpec(ncols=2, nrows=2, bottom=0.05, top=0.95, left=0.05, right=0.50, hspace=0, wspace=0)
gs_pd = GridSpec(ncols=2, nrows=4, bottom=0.05, top=0.95, left=0.55, right=0.95, hspace=0, wspace=0)

ax_cn_1 = plt.subplot(gs_cf[0])
ax_cn_2 = plt.subplot(gs_cf[2])
ax_cn_3 = plt.subplot(gs_cf[3])
ax_cn_all = [ax_cn_1, ax_cn_2, ax_cn_3]

# Plot standard data
colors = ["#d53e4f", "#4d9221"]
alpha = [0.1, 0.03, 0.1]
skip = 1
for ax_cn, idx, cidx in zip(ax_cn_all, range(3), idx_combinations):

    # Show VISION sources
    ax_cn.scatter(science_all_colors.features[cidx[0]][::skip], science_all_colors.features[cidx[1]][::skip],
                  lw=0, s=2, alpha=alpha[idx], color="#4575b4")

    # Show densities
    dens = dens_control_norm[idx].T
    # ax_cn.imshow(dens_control_norm[idx].T, interpolation="nearest", origin="lower", extent=edges, cmap=cmap)
    ax_cn.contour(dens / np.max(dens), origin="lower", extent=edges, levels=[0.005, 0.03, 0.25, 0.5],
                  colors="black", linewidths=2)

    # Plot line through sources along extinction
    for x, y in zip(science_colors.features[cidx[0]], science_colors.features[cidx[1]]):
        k = control_colors.extvec.extvec[cidx[1]] / control_colors.extvec.extvec[cidx[0]]
        d = y - k * x
        xn = (-100., 100.)
        yn = (k * xn[0] + d, k * xn[1] + d)
        ax_cn.plot(xn, yn, color="black", zorder=1, linestyle="dashed")

    # Show fake source
    ax_cn.scatter(science_colors.features[cidx[0]], science_colors.features[cidx[1]], facecolors=colors,
                  marker="v", s=90, lw=1, edgecolors="black", zorder=2, label="original")
    ax_cn.scatter(science_ext.features_dered[cidx[0]], science_ext.features_dered[cidx[1]], facecolors=colors,
                  marker="^", s=90, lw=1, edgecolors="black", zorder=2, label="de-reddened")

    # Set limits
    ax_cn.set_xlim(edges[:2])
    ax_cn.set_ylim(edges[2:])

    # Ticker
    ax_cn.xaxis.set_minor_locator(MultipleLocator(0.1))
    ax_cn.yaxis.set_minor_locator(MultipleLocator(0.1))

    # Show extinction arrows
    ax_cn.arrow(1.5, 0, control_colors.extvec.extvec[cidx[0]], control_colors.extvec.extvec[cidx[1]],
                length_includes_head=True, width=0.01, head_width=0.04, head_length=0.06)

    # Annotate extinction arrow
    ax_cn.annotate("$A_K \/ = \/ 1$",
                   xy=[1.5 + 0.40 * control_colors.extvec.extvec[cidx[0]],
                       0.12 * control_colors.extvec.extvec[cidx[1]]],
                   xycoords="data", ha="center", va="center",
                   rotation=np.degrees(np.arctan(control_colors.extvec.extvec[cidx[1]] /
                                                 control_colors.extvec.extvec[cidx[0]])))

    # Adjust axes
    if idx == 0:
        ax_cn.axes.xaxis.set_ticklabels([])
        ax_cn.set_ylabel("$K_S - IRAC_1 \/ (\mathrm{mag})$")

    if idx == 1:
        ax_cn.set_ylabel("$J - H \/ (\mathrm{mag})$")
        ax_cn.set_xlabel("$H - K_S \/ (\mathrm{mag})$")
        # Delete last label
        # ax_cn.xaxis.get_major_ticks()[-1].set_visible(False)
        # ax_cn.yaxis.get_major_ticks()[-1].set_visible(False)

    if idx == 2:
        ax_cn.axes.yaxis.set_ticklabels([])
        ax_cn.set_xlabel("$K_S - IRAC_1 \/ (\mathrm{mag})$")
        ax_cn.legend(scatterpoints=2, bbox_to_anchor=(1, 1.18), frameon=False)
        ax_cn.annotate("S1", xy=[0.57, 1.16], xycoords="axes fraction", ha="center", va="bottom")
        ax_cn.annotate("S2", xy=[0.635, 1.16], xycoords="axes fraction", ha="center", va="bottom")


# ----------------------------------------------------------------------
# Get PDFs for each combination a source

# Copy pasted from PNICER:
# add these lines
# line = ",".join([str(np.around(x, 3)) for x in vec])
# print("[" + line + "]")
# to the part where I loop over the vectors in pnicer_single, then reformat with IntelliJ error indicator

pdf1_1 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.66,1.346,1.776,1.95,2.783,5.471,10.47,16.788,34.762,72.407,143.48,306.499,705.834,1505.794,2730.046,4199.226,5560.856,6551.483,7058.21,7166.468,7085.81,6984.468,6974.304,7081.048,7295.121,7678.107,8331.259,9469.021,11306.312,13564.699,15268.715,15492.135,14006.323,11229.606,7826.671,4668.385,2437.191,1261.239,742.694,492.552,346.503,257.565,211.425,181.221,160.567,144.673,134.832,132.066,137.92,140.088,147.415,153.45,150.355,148.945,145.375,142.391,138.325,135.397,136.106,133.704,134.712,135.846,132.837,125.696,112.319,90.132,73.512,60.747,52.849,45.999,42.288,38.941,34.008,28.101,23.148,17.745,14.796,10.885,9.999,9.143,7.504,7.12,6.269,4.516,3.305,2.586,2.252,1.405,0.259,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
pdf2_1 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.429,1.553,3.483,6.209,8.926,10.645,12.738,13.184,13.18,15.656,17.81,23.366,32.546,43.857,62.557,85.883,112.327,145.14,177.528,216.87,268.449,315.117,357.58,395.579,435.467,465.501,489.453,524.734,576.354,642.064,723.35,816.02,921.004,1030.125,1139.594,1292.738,1490.124,1743.103,2048.954,2393.707,2684.037,2914.33,3073.606,3154.93,3158.516,3099.114,3015.453,2901.891,2723.566,2486.674,2237.293,1986.833,1728.382,1495.868,1280.099,1081.135,910.193,747.366,624.814,530.372,441.726,350.25,272.272,203.409,151.912,119.119,99.971,83.507,67.984,56.292,42.272,29.789,17.806,11.439,8.03,4.324,2.831,3.076,3.052,2.002,1.464,0.692,0.197,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
pdf1_2 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.151,1.447,3.229,4.641,5.2,9.112,15.806,22.28,29.175,39.467,53.543,66.059,75.484,83.185,89.685,96.992,113.71,132.442,151.417,168.028,188.235,216.853,253.179,291.709,326.631,366.738,416.872,501.444,612.266,721.745,814.07,900.453,950.373,957.351,909.882,868.85,825.251,767.772,696.834,601.782,501.009,419.199,341.56,276.184,227.634,190.438,159.885,133.925,110.612,99.389,85.202,72.397,56.654,46.367,43.592,39.632,33.334,28.722,22.574,18.397,11.048,5.234,3.422,3.464,2.653,2.503,2.22,2.841,3.035,2.803,2.145,1.06,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
pdf2_2 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.145,1.562,2.553,3.142,5.846,9.271,15.037,24.424,35.002,50.71,72.148,110.377,186.997,340.25,624.846,1149.57,1928.926,2836.42,3769.557,4496.288,4878.154,4816.821,4358.903,3748.244,3153.44,2707.119,2422.288,2339.451,2492.467,2884.256,3461.759,4125.904,4696.461,4931.642,4716.518,4008.282,3045.164,2082.906,1312.846,787.052,468.622,296.276,211.074,169.983,143.583,117.982,89.312,69.903,56.152,44.748,30.082,19.068,14.435,14.284,12.08,10.745,10.259,10.603,11.94,11.748,12.323,11.316,10.323,8.013,5.166,2.871,2.702,2.107,1.085,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
pdf1_3 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.804,4.729,8.218,15.089,26.373,39.998,53.471,75.647,121.547,195.648,295.135,429.081,585.676,751.703,887.721,960.364,972.577,948.192,880.623,784.862,689.758,642.339,617.987,622.477,657.017,723.422,780.921,807.14,779.163,699.292,574.891,448.262,329.746,251.414,197.478,154.576,120.541,99.009,82.134,66.775,55.434,51.672,49.648,47.169,47.685,54.083,61.813,74.72,89.366,98.998,103.5,114.41,126.324,138.71,158.153,189.203,233.474,267.239,287.206,315.937,333.742,344.225,356.978,379.551,417.454,440.119,451.166,453.648,448.182,434.514,415.562,386.033,350.794,300.681,243.279,192.867,173.283,160.065,148.581,141.995,137.183,133.228,123.405,121.935,122.019,115.208,107.166,94.144,80.55,68.136,61.654,62.88,60.823,61.411,58.068,56.287,53.781,46.265,41.524,38.972,35.971,35.174,31.245,26.214,24.697,20.127,15.978,14.522,11.503,11.747,12.294,14.31,15.607,16.73,17.652,14.497,9.994,5.767,6.368,6.738,8.434,9.044,8.466,6.382,3.031,0.165,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.397,1.433,1.968,2.0,1.53,0.559,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
pdf2_3 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.713,2.828,7.657,14.432,26.992,51.405,125.278,349.589,885.11,1805.456,2982.597,4119.727,4989.429,5398.72,5310.356,4871.962,4219.022,3505.431,2877.882,2315.254,1902.884,1716.041,1717.239,1885.123,2098.896,2232.315,2213.282,2059.034,1801.815,1502.328,1166.384,860.301,626.844,458.155,323.192,230.169,164.977,111.944,77.183,61.545,55.908,50.45,45.958,44.221,45.062,48.506,53.893,63.387,69.908,78.923,90.474,101.523,117.83,142.621,173.14,199.524,206.588,218.04,226.8,245.011,265.452,281.179,311.547,330.54,341.848,345.984,334.579,310.888,272.071,236.04,214.292,183.558,164.292,142.959,115.697,90.459,79.656,70.341,67.943,69.654,70.027,63.266,55.36,48.786,45.027,44.774,42.597,40.836,43.479,41.703,37.025,35.933,35.257,35.606,37.57,37.579,38.732,35.12,27.612,20.46,14.314,10.129,11.712,12.357,11.144,10.192,9.527,9.592,8.698,7.147,6.521,7.042,8.296,8.722,9.191,9.209,7.534,6.84,6.773,5.498,6.054,6.03,4.499,1.931,0.336,0.285,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
pdf1_4 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.452,3.308,30.528,183.307,595.208,1436.007,2631.262,4082.932,5434.02,6326.136,6505.69,6149.929,5502.308,4759.844,4168.732,3711.503,3356.072,3053.603,2752.316,2341.998,1919.477,1663.738,1649.085,2078.434,3011.236,4096.777,4754.848,4642.145,3851.333,2657.347,1545.033,694.334,239.628,82.406,31.187,12.624,4.816,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.59,1.965,2.201,1.298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
pdf2_4 = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.517,3.139,6.883,12.055,16.246,18.161,20.467,26.198,30.295,36.453,49.582,54.121,50.976,49.569,55.605,66.579,101.153,158.779,215.031,269.669,318.183,342.574,358.8,338.287,292.225,251.269,219.054,174.111,143.78,133.619,123.111,109.533,98.005,80.241,65.334,68.978,76.336,82.274,78.304,71.729,55.66,33.872,20.329,10.247,8.136,5.321,2.248,2.345,1.786,4.337,4.986,5.815,5.506,4.058,1.47,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]

all_pdf = [pdf1_1, pdf2_1, pdf1_2, pdf2_2, pdf1_3, pdf2_3, pdf1_4, pdf2_4]

# Get extinction along vector
# copy paste this:
# for m in grid_mean:
#     dummy = (m - grid_ext) / self.extvec.extinction_norm
#     print("[" + ",".join([str(np.around(x, 3)) for x in dummy]) + "]")
# into PNICER single

pde1_1 = [1.39,1.37,1.349,1.329,1.308,1.288,1.267,1.247,1.226,1.206,1.185,1.165,1.144,1.124,1.103,1.083,1.062,1.042,1.021,1.001,0.98,0.96,0.939,0.919,0.898,0.878,0.857,0.837,0.816,0.796,0.775,0.755,0.734,0.714,0.693,0.673,0.652,0.632,0.611,0.591,0.57,0.55,0.529,0.509,0.488,0.468,0.447,0.427,0.406,0.386,0.366,0.345,0.325,0.304,0.284,0.263,0.243,0.222,0.202,0.181,0.161,0.14,0.12,0.099,0.079,0.058,0.038,0.017,-0.003,-0.024,-0.044,-0.065,-0.085,-0.106,-0.126,-0.147,-0.167,-0.188,-0.208,-0.229,-0.249,-0.27,-0.29,-0.311,-0.331,-0.352,-0.372,-0.393,-0.413,-0.434,-0.454,-0.475,-0.495,-0.516,-0.536,-0.557,-0.577,-0.598,-0.618,-0.639,-0.659,-0.68,-0.7,-0.721,-0.741,-0.762,-0.782,-0.803,-0.823,-0.844,-0.864,-0.885,-0.905,-0.926,-0.946,-0.967,-0.987,-1.008,-1.028,-1.049,-1.069,-1.09,-1.11,-1.131,-1.151,-1.172,-1.192,-1.213,-1.233,-1.254,-1.274,-1.295,-1.315,-1.336,-1.356,-1.377,-1.397,-1.418,-1.438,-1.459,-1.479,-1.5,-1.52,-1.541,-1.561,-1.582,-1.602,-1.623,-1.643,-1.664,-1.684,-1.705,-1.725,-1.746,-1.766,-1.787,-1.807,-1.828,-1.848,-1.869,-1.889,-1.91,-1.93,-1.951,-1.971,-1.992,-2.012,-2.033,-2.053,-2.074,-2.094,-2.115,-2.135,-2.156,-2.176,-2.197,-2.217,-2.238,-2.258,-2.279,-2.299,-2.32,-2.34,-2.361,-2.381,-2.402,-2.422,-2.443,-2.463,-2.484,-2.504,-2.525,-2.545,-2.566,-2.586,-2.607,-2.627,-2.648,-2.668,-2.689,-2.709,-2.73,-2.75,-2.771,-2.791,-2.812,-2.832,-2.853,-2.873,-2.894,-2.914,-2.935,-2.955,-2.976,-2.996,-3.016,-3.037,-3.057,-3.078,-3.098,-3.119,-3.139,-3.16]
pde2_1 = [1.887,1.866,1.846,1.825,1.805,1.784,1.764,1.743,1.723,1.702,1.682,1.661,1.641,1.62,1.6,1.579,1.559,1.538,1.518,1.497,1.477,1.456,1.436,1.415,1.395,1.374,1.354,1.333,1.313,1.292,1.272,1.251,1.231,1.21,1.19,1.169,1.149,1.128,1.108,1.087,1.067,1.046,1.026,1.005,0.985,0.964,0.944,0.923,0.903,0.882,0.862,0.841,0.821,0.8,0.78,0.759,0.739,0.718,0.698,0.677,0.657,0.636,0.616,0.595,0.575,0.554,0.534,0.513,0.493,0.472,0.452,0.431,0.411,0.39,0.37,0.349,0.329,0.308,0.288,0.267,0.247,0.226,0.206,0.185,0.165,0.144,0.124,0.103,0.083,0.062,0.042,0.021,0.001,-0.02,-0.04,-0.061,-0.081,-0.102,-0.122,-0.143,-0.163,-0.184,-0.204,-0.225,-0.245,-0.266,-0.286,-0.306,-0.327,-0.347,-0.368,-0.388,-0.409,-0.429,-0.45,-0.47,-0.491,-0.511,-0.532,-0.552,-0.573,-0.593,-0.614,-0.634,-0.655,-0.675,-0.696,-0.716,-0.737,-0.757,-0.778,-0.798,-0.819,-0.839,-0.86,-0.88,-0.901,-0.921,-0.942,-0.962,-0.983,-1.003,-1.024,-1.044,-1.065,-1.085,-1.106,-1.126,-1.147,-1.167,-1.188,-1.208,-1.229,-1.249,-1.27,-1.29,-1.311,-1.331,-1.352,-1.372,-1.393,-1.413,-1.434,-1.454,-1.475,-1.495,-1.516,-1.536,-1.557,-1.577,-1.598,-1.618,-1.639,-1.659,-1.68,-1.7,-1.721,-1.741,-1.762,-1.782,-1.803,-1.823,-1.844,-1.864,-1.885,-1.905,-1.926,-1.946,-1.967,-1.987,-2.008,-2.028,-2.049,-2.069,-2.09,-2.11,-2.131,-2.151,-2.172,-2.192,-2.213,-2.233,-2.254,-2.274,-2.295,-2.315,-2.336,-2.356,-2.377,-2.397,-2.418,-2.438,-2.459,-2.479,-2.5,-2.52,-2.541,-2.561,-2.582,-2.602,-2.623,-2.643,-2.664]
pde1_2 = [1.918,1.895,1.873,1.851,1.829,1.807,1.785,1.763,1.741,1.719,1.696,1.674,1.652,1.63,1.608,1.586,1.564,1.542,1.52,1.497,1.475,1.453,1.431,1.409,1.387,1.365,1.343,1.32,1.298,1.276,1.254,1.232,1.21,1.188,1.166,1.144,1.121,1.099,1.077,1.055,1.033,1.011,0.989,0.967,0.944,0.922,0.9,0.878,0.856,0.834,0.812,0.79,0.768,0.745,0.723,0.701,0.679,0.657,0.635,0.613,0.591,0.569,0.546,0.524,0.502,0.48,0.458,0.436,0.414,0.392,0.369,0.347,0.325,0.303,0.281,0.259,0.237,0.215,0.193,0.17,0.148,0.126,0.104,0.082,0.06,0.038,0.016,-0.007,-0.029,-0.051,-0.073,-0.095,-0.117,-0.139,-0.161,-0.183,-0.206,-0.228,-0.25,-0.272,-0.294,-0.316,-0.338,-0.36,-0.382,-0.405,-0.427,-0.449,-0.471,-0.493,-0.515,-0.537,-0.559,-0.582,-0.604,-0.626,-0.648,-0.67,-0.692,-0.714,-0.736,-0.758,-0.781,-0.803,-0.825,-0.847,-0.869,-0.891,-0.913,-0.935,-0.958,-0.98,-1.002,-1.024,-1.046,-1.068,-1.09,-1.112,-1.134,-1.157,-1.179,-1.201,-1.223,-1.245,-1.267,-1.289,-1.311,-1.334,-1.356,-1.378,-1.4,-1.422,-1.444,-1.466,-1.488,-1.51,-1.533,-1.555,-1.577,-1.599,-1.621,-1.643,-1.665,-1.687,-1.709,-1.732,-1.754,-1.776,-1.798,-1.82,-1.842,-1.864,-1.886,-1.909,-1.931,-1.953,-1.975,-1.997,-2.019,-2.041,-2.063,-2.085,-2.108,-2.13,-2.152,-2.174,-2.196,-2.218,-2.24,-2.262,-2.285,-2.307,-2.329,-2.351,-2.373,-2.395,-2.417,-2.439,-2.461,-2.484,-2.506,-2.528,-2.55,-2.572,-2.594,-2.616,-2.638,-2.66,-2.683,-2.705,-2.727,-2.749,-2.771,-2.793,-2.815,-2.837,-2.86,-2.882,-2.904,-2.926,-2.948,-2.97,-2.992]
pde2_2 = [1.434,1.412,1.389,1.367,1.345,1.323,1.301,1.279,1.257,1.235,1.213,1.19,1.168,1.146,1.124,1.102,1.08,1.058,1.036,1.013,0.991,0.969,0.947,0.925,0.903,0.881,0.859,0.837,0.814,0.792,0.77,0.748,0.726,0.704,0.682,0.66,0.638,0.615,0.593,0.571,0.549,0.527,0.505,0.483,0.461,0.438,0.416,0.394,0.372,0.35,0.328,0.306,0.284,0.262,0.239,0.217,0.195,0.173,0.151,0.129,0.107,0.085,0.062,0.04,0.018,-0.004,-0.026,-0.048,-0.07,-0.092,-0.114,-0.137,-0.159,-0.181,-0.203,-0.225,-0.247,-0.269,-0.291,-0.313,-0.336,-0.358,-0.38,-0.402,-0.424,-0.446,-0.468,-0.49,-0.513,-0.535,-0.557,-0.579,-0.601,-0.623,-0.645,-0.667,-0.689,-0.712,-0.734,-0.756,-0.778,-0.8,-0.822,-0.844,-0.866,-0.889,-0.911,-0.933,-0.955,-0.977,-0.999,-1.021,-1.043,-1.065,-1.088,-1.11,-1.132,-1.154,-1.176,-1.198,-1.22,-1.242,-1.264,-1.287,-1.309,-1.331,-1.353,-1.375,-1.397,-1.419,-1.441,-1.464,-1.486,-1.508,-1.53,-1.552,-1.574,-1.596,-1.618,-1.64,-1.663,-1.685,-1.707,-1.729,-1.751,-1.773,-1.795,-1.817,-1.84,-1.862,-1.884,-1.906,-1.928,-1.95,-1.972,-1.994,-2.016,-2.039,-2.061,-2.083,-2.105,-2.127,-2.149,-2.171,-2.193,-2.216,-2.238,-2.26,-2.282,-2.304,-2.326,-2.348,-2.37,-2.392,-2.415,-2.437,-2.459,-2.481,-2.503,-2.525,-2.547,-2.569,-2.591,-2.614,-2.636,-2.658,-2.68,-2.702,-2.724,-2.746,-2.768,-2.791,-2.813,-2.835,-2.857,-2.879,-2.901,-2.923,-2.945,-2.967,-2.99,-3.012,-3.034,-3.056,-3.078,-3.1,-3.122,-3.144,-3.167,-3.189,-3.211,-3.233,-3.255,-3.277,-3.299,-3.321,-3.343,-3.366,-3.388,-3.41,-3.432,-3.454,-3.476]
pde1_3 = [2.338,2.315,2.292,2.27,2.247,2.224,2.201,2.179,2.156,2.133,2.11,2.088,2.065,2.042,2.019,1.997,1.974,1.951,1.929,1.906,1.883,1.86,1.838,1.815,1.792,1.769,1.747,1.724,1.701,1.678,1.656,1.633,1.61,1.587,1.565,1.542,1.519,1.496,1.474,1.451,1.428,1.405,1.383,1.36,1.337,1.314,1.292,1.269,1.246,1.223,1.201,1.178,1.155,1.133,1.11,1.087,1.064,1.042,1.019,0.996,0.973,0.951,0.928,0.905,0.882,0.86,0.837,0.814,0.791,0.769,0.746,0.723,0.7,0.678,0.655,0.632,0.609,0.587,0.564,0.541,0.518,0.496,0.473,0.45,0.427,0.405,0.382,0.359,0.337,0.314,0.291,0.268,0.246,0.223,0.2,0.177,0.155,0.132,0.109,0.086,0.064,0.041,0.018,-0.005,-0.027,-0.05,-0.073,-0.096,-0.118,-0.141,-0.164,-0.187,-0.209,-0.232,-0.255,-0.278,-0.3,-0.323,-0.346,-0.369,-0.391,-0.414,-0.437,-0.459,-0.482,-0.505,-0.528,-0.55,-0.573,-0.596,-0.619,-0.641,-0.664,-0.687,-0.71,-0.732,-0.755,-0.778,-0.801,-0.823,-0.846,-0.869,-0.892,-0.914,-0.937,-0.96,-0.983,-1.005,-1.028,-1.051,-1.074,-1.096,-1.119,-1.142,-1.165,-1.187,-1.21,-1.233,-1.256,-1.278,-1.301,-1.324,-1.346,-1.369,-1.392,-1.415,-1.437,-1.46,-1.483,-1.506,-1.528,-1.551,-1.574,-1.597,-1.619,-1.642,-1.665,-1.688,-1.71,-1.733,-1.756,-1.779,-1.801,-1.824,-1.847,-1.87,-1.892,-1.915,-1.938,-1.961,-1.983,-2.006,-2.029,-2.052,-2.074,-2.097,-2.12,-2.142,-2.165,-2.188,-2.211,-2.233,-2.256,-2.279,-2.302,-2.324,-2.347,-2.37,-2.393,-2.415,-2.438,-2.461,-2.484,-2.506,-2.529,-2.552,-2.575,-2.597,-2.62,-2.643,-2.666,-2.688,-2.711,-2.734,-2.757,-2.779,-2.802,-2.825,-2.848,-2.87,-2.893,-2.916,-2.938,-2.961,-2.984,-3.007,-3.029,-3.052,-3.075,-3.098,-3.12,-3.143,-3.166,-3.189,-3.211,-3.234,-3.257,-3.28,-3.302,-3.325,-3.348,-3.371,-3.393,-3.416,-3.439,-3.462,-3.484,-3.507,-3.53,-3.553,-3.575,-3.598,-3.621,-3.644,-3.666,-3.689,-3.712]
pde2_3 = [1.883,1.86,1.838,1.815,1.792,1.77,1.747,1.724,1.701,1.679,1.656,1.633,1.61,1.588,1.565,1.542,1.519,1.497,1.474,1.451,1.428,1.406,1.383,1.36,1.337,1.315,1.292,1.269,1.246,1.224,1.201,1.178,1.155,1.133,1.11,1.087,1.064,1.042,1.019,0.996,0.973,0.951,0.928,0.905,0.883,0.86,0.837,0.814,0.792,0.769,0.746,0.723,0.701,0.678,0.655,0.632,0.61,0.587,0.564,0.541,0.519,0.496,0.473,0.45,0.428,0.405,0.382,0.359,0.337,0.314,0.291,0.268,0.246,0.223,0.2,0.177,0.155,0.132,0.109,0.087,0.064,0.041,0.018,-0.004,-0.027,-0.05,-0.073,-0.095,-0.118,-0.141,-0.164,-0.186,-0.209,-0.232,-0.255,-0.277,-0.3,-0.323,-0.346,-0.368,-0.391,-0.414,-0.437,-0.459,-0.482,-0.505,-0.528,-0.55,-0.573,-0.596,-0.619,-0.641,-0.664,-0.687,-0.709,-0.732,-0.755,-0.778,-0.8,-0.823,-0.846,-0.869,-0.891,-0.914,-0.937,-0.96,-0.982,-1.005,-1.028,-1.051,-1.073,-1.096,-1.119,-1.142,-1.164,-1.187,-1.21,-1.233,-1.255,-1.278,-1.301,-1.324,-1.346,-1.369,-1.392,-1.415,-1.437,-1.46,-1.483,-1.505,-1.528,-1.551,-1.574,-1.596,-1.619,-1.642,-1.665,-1.687,-1.71,-1.733,-1.756,-1.778,-1.801,-1.824,-1.847,-1.869,-1.892,-1.915,-1.938,-1.96,-1.983,-2.006,-2.029,-2.051,-2.074,-2.097,-2.12,-2.142,-2.165,-2.188,-2.211,-2.233,-2.256,-2.279,-2.301,-2.324,-2.347,-2.37,-2.392,-2.415,-2.438,-2.461,-2.483,-2.506,-2.529,-2.552,-2.574,-2.597,-2.62,-2.643,-2.665,-2.688,-2.711,-2.734,-2.756,-2.779,-2.802,-2.825,-2.847,-2.87,-2.893,-2.916,-2.938,-2.961,-2.984,-3.007,-3.029,-3.052,-3.075,-3.098,-3.12,-3.143,-3.166,-3.188,-3.211,-3.234,-3.257,-3.279,-3.302,-3.325,-3.348,-3.37,-3.393,-3.416,-3.439,-3.461,-3.484,-3.507,-3.53,-3.552,-3.575,-3.598,-3.621,-3.643,-3.666,-3.689,-3.712,-3.734,-3.757,-3.78,-3.803,-3.825,-3.848,-3.871,-3.894,-3.916,-3.939,-3.962,-3.984,-4.007,-4.03,-4.053,-4.075,-4.098,-4.121,-4.144,-4.166]
pde1_4 = [1.252,1.235,1.218,1.2,1.183,1.166,1.149,1.131,1.114,1.097,1.079,1.062,1.045,1.028,1.01,0.993,0.976,0.958,0.941,0.924,0.906,0.889,0.872,0.855,0.837,0.82,0.803,0.785,0.768,0.751,0.734,0.716,0.699,0.682,0.664,0.647,0.63,0.612,0.595,0.578,0.561,0.543,0.526,0.509,0.491,0.474,0.457,0.44,0.422,0.405,0.388,0.37,0.353,0.336,0.318,0.301,0.284,0.267,0.249,0.232,0.215,0.197,0.18,0.163,0.146,0.128,0.111,0.094,0.076,0.059,0.042,0.024,0.007,-0.01,-0.027,-0.045,-0.062,-0.079,-0.097,-0.114,-0.131,-0.148,-0.166,-0.183,-0.2,-0.218,-0.235,-0.252,-0.269,-0.287,-0.304,-0.321,-0.339,-0.356,-0.373,-0.391,-0.408,-0.425,-0.442,-0.46,-0.477,-0.494,-0.512,-0.529,-0.546,-0.563,-0.581,-0.598,-0.615,-0.633,-0.65,-0.667,-0.685,-0.702,-0.719,-0.736,-0.754,-0.771,-0.788,-0.806,-0.823,-0.84,-0.857,-0.875,-0.892,-0.909,-0.927,-0.944,-0.961,-0.979,-0.996,-1.013,-1.03,-1.048,-1.065,-1.082,-1.1,-1.117,-1.134,-1.151,-1.169,-1.186,-1.203,-1.221,-1.238,-1.255,-1.273,-1.29,-1.307,-1.324,-1.342,-1.359,-1.376,-1.394,-1.411,-1.428,-1.445,-1.463,-1.48,-1.497,-1.515,-1.532,-1.549,-1.567,-1.584,-1.601,-1.618,-1.636,-1.653,-1.67,-1.688,-1.705,-1.722,-1.739,-1.757,-1.774,-1.791,-1.809,-1.826,-1.843,-1.86,-1.878,-1.895,-1.912,-1.93,-1.947,-1.964,-1.982,-1.999,-2.016,-2.033,-2.051,-2.068,-2.085,-2.103,-2.12,-2.137,-2.154,-2.172,-2.189,-2.206,-2.224,-2.241,-2.258,-2.276,-2.293,-2.31,-2.327,-2.345,-2.362,-2.379,-2.397,-2.414,-2.431,-2.448,-2.466,-2.483,-2.5,-2.518,-2.535,-2.552,-2.57,-2.587,-2.604,-2.621,-2.639,-2.656,-2.673,-2.691,-2.708,-2.725,-2.742,-2.76,-2.777,-2.794,-2.812,-2.829,-2.846,-2.864,-2.881,-2.898,-2.915,-2.933,-2.95,-2.967,-2.985,-3.002,-3.019,-3.036,-3.054,-3.071]
pde2_4 = [1.935,1.918,1.901,1.883,1.866,1.849,1.832,1.814,1.797,1.78,1.762,1.745,1.728,1.711,1.693,1.676,1.659,1.641,1.624,1.607,1.589,1.572,1.555,1.538,1.52,1.503,1.486,1.468,1.451,1.434,1.417,1.399,1.382,1.365,1.347,1.33,1.313,1.295,1.278,1.261,1.244,1.226,1.209,1.192,1.174,1.157,1.14,1.123,1.105,1.088,1.071,1.053,1.036,1.019,1.001,0.984,0.967,0.95,0.932,0.915,0.898,0.88,0.863,0.846,0.829,0.811,0.794,0.777,0.759,0.742,0.725,0.707,0.69,0.673,0.656,0.638,0.621,0.604,0.586,0.569,0.552,0.535,0.517,0.5,0.483,0.465,0.448,0.431,0.413,0.396,0.379,0.362,0.344,0.327,0.31,0.292,0.275,0.258,0.241,0.223,0.206,0.189,0.171,0.154,0.137,0.119,0.102,0.085,0.068,0.05,0.033,0.016,-0.002,-0.019,-0.036,-0.053,-0.071,-0.088,-0.105,-0.123,-0.14,-0.157,-0.174,-0.192,-0.209,-0.226,-0.244,-0.261,-0.278,-0.296,-0.313,-0.33,-0.347,-0.365,-0.382,-0.399,-0.417,-0.434,-0.451,-0.468,-0.486,-0.503,-0.52,-0.538,-0.555,-0.572,-0.59,-0.607,-0.624,-0.641,-0.659,-0.676,-0.693,-0.711,-0.728,-0.745,-0.762,-0.78,-0.797,-0.814,-0.832,-0.849,-0.866,-0.884,-0.901,-0.918,-0.935,-0.953,-0.97,-0.987,-1.005,-1.022,-1.039,-1.056,-1.074,-1.091,-1.108,-1.126,-1.143,-1.16,-1.178,-1.195,-1.212,-1.229,-1.247,-1.264,-1.281,-1.299,-1.316,-1.333,-1.35,-1.368,-1.385,-1.402,-1.42,-1.437,-1.454,-1.472,-1.489,-1.506,-1.523,-1.541,-1.558,-1.575,-1.593,-1.61,-1.627,-1.644,-1.662,-1.679,-1.696,-1.714,-1.731,-1.748,-1.765,-1.783,-1.8,-1.817,-1.835,-1.852,-1.869,-1.887,-1.904,-1.921,-1.938,-1.956,-1.973,-1.99,-2.008,-2.025,-2.042,-2.059,-2.077,-2.094,-2.111,-2.129,-2.146,-2.163,-2.181,-2.198,-2.215,-2.232,-2.25,-2.267,-2.284,-2.302,-2.319,-2.336,-2.353,-2.371,-2.388]

all_pde = [pde1_1, pde2_1, pde1_2, pde2_2, pde1_3, pde2_3, pde1_4, pde2_4]

# Combination names
names = ["$\mathbf{J-H}$, $\mathbf{H-K_S}$", "$\mathbf{J-H}$, $\mathbf{K_S-IRAC_1}$",
         "$\mathbf{H-K_S}$, $\mathbf{K_S-IRAC_1}$", "$\mathbf{J-H}$, $\mathbf{H-K_S}$, $\mathbf{K_S-IRAC_1}$"]

# Add the PDFs for all combinations
for idx in range(8):

    # Add axes
    ax = plt.subplot(gs_pd[idx])

    # Plot PDF
    ax.plot(all_pde[idx] + science_colors._ext_combinations.ravel()[idx], all_pdf[idx] / np.sum(all_pdf[idx]),
            lw=3, color="#3288bd", zorder=1)

    # Set limits
    ax.set_xlim(0, 2.5)
    ax.set_ylim(0, 0.1)

    # Plot vertical line at mean probability
    ax.vlines(science_colors._ext_combinations.ravel()[idx], 0, 1, lw=2, zorder=2, linestyles="dashed")

    # Annotate standard deviation
    if idx % 2 == 0:
        ha, hx = "left", 0.05
    else:
        ha, hx = "right", 0.95
    ax.annotate(str(np.around(science_colors._ext_combinations.ravel()[idx], 2)) + "$\pm$" + \
                str(np.around(np.sqrt(science_colors._var_combinations.ravel())[idx], 2)),
                xy=[hx, 0.95],
                xycoords="axes fraction", ha=ha, va="top")

    # Annotate combinations
    if idx % 2 == 1:
        ax.annotate(names[idx//2], xy=[1.02, 0.5], xycoords="axes fraction", ha="left", va="center",
                    rotation="vertical", weight="bold")

    # Adjust axes
    if idx % 2 == 0:
        ax.set_ylabel("P")
        ax.xaxis.get_major_ticks()[-1].set_visible(False)

    if idx % 2 == 1:
        ax.axes.yaxis.set_ticklabels([])

    if idx > 5:
        ax.set_xlabel("$A_K \/ (\mathrm{mag})$")
    else:
        ax.axes.xaxis.set_ticklabels([])

    if idx > 0:
        ax.yaxis.get_major_ticks()[-1].set_visible(False)

    if idx == 0:
        ax.annotate("S1", xy=[0.05, 1.01], xycoords="axes fraction", ha="left", va="bottom", size=14, weight="bold")
    if idx == 1:
        ax.annotate("S2", xy=[0.95, 1.01], xycoords="axes fraction", ha="right", va="bottom", size=14, weight="bold")

    # Ticker
    ax.xaxis.set_minor_locator(MultipleLocator(0.1))
    ax.yaxis.set_major_locator(MultipleLocator(0.02))
    ax.yaxis.set_minor_locator(MultipleLocator(0.01))


# Save figure
plt.savefig(results_path + "method.png", bbox_inches="tight")
